@model UserEditViewModel
@{
	ViewData["Title"] = "Edit";
}
<h2>@ViewData["Title"].</h2>

<form asp-controller="Users" asp-action="Edit" method="post" class="form-horizontal">
	<h4>Edit user details.</h4>
	<hr>
	
	@if (!ViewData.ModelState.IsValid)
	{
		<div asp-validation-summary="All" class="text-danger"></div>
	}

	@if (User.IsInRole(Role.Admin))
	{
		<div class="form-group">
			<label asp-for="Email" class="col-md-2 control-label"></label>
			<div class="col-md-10">
				<input asp-for="Email" class="form-control" />
				<span asp-validation-for="Email" class="text-danger"></span>
			</div>
		</div>
		<div class="form-group">
			<label asp-for="UserName" class="col-md-2 control-label"></label>
			<div class="col-md-10">
				<input asp-for="UserName" class="form-control" />
				<span asp-validation-for="UserName" class="text-danger"></span>
			</div>
		</div>
		<div class="form-group">
			<label asp-for="Role" class="col-md-2 control-label"></label>
			<div class="col-md-10">
				<select asp-for="Role" asp-items="Model.Roles" class="form-control"></select>
				<span asp-validation-for="Role" class="text-danger"></span>
			</div>
		</div>
	}
	else
	{
		<input asp-for="Email" type="hidden"/>
		<input asp-for="UserName" type="hidden" />
		<input asp-for="Role" type="hidden"/>
	}

	<div class="form-group">
		<label asp-for="SelectedAreas" class="col-md-2 control-label"></label>
		<div class="col-md-10">
			<select asp-for="SelectedAreas" asp-items="Model.Areas" class="form-control"></select>
			<span asp-validation-for="SelectedAreas" class="text-danger"></span>
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<button type="submit" class="btn btn-default">Update</button>
		</div>
	</div>
</form>

@section Scripts {
	@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
